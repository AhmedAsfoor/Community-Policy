{
    "displayName": "Deny specific port from being included in the destination field of an NSG rule",
    "description": "This policy will check to see if the provided value is present in the destination port field of an NSG rule. This can even evaluate if a number is included in a range of numbers. Example, if you provided the value of 22, and tried to make an NSG rule where the destination port value was 20-200 this Policy would deny that creation. Additionally it will prevent a user from using '*' in a rule as that would effectively violate the intent of this Policy.",
    "mode": "All",
    "parameters": {
        "notAllowedDestinationPort": {
            "type": "Integer",
            "metadata": {
                "displayName": "Destination Port to Block - 0 Disables Check",
                "description": "Port you're seeking to block"
            },
            "defaultValue": 0
        },
        "notAllowedSourcePort": {
            "type": "Integer",
            "metadata": {
                "displayName": "Source Port to Block - 0 Disables Check",
                "description": "Port you're seeking to block"
            },
            "defaultValue": 0
        },
        "direction": {
            "type": "string",
            "metadata": {
                "displayName": "Check for Inbound or Outbound rule",
                "description": "This specifies if you're looking for this port as part of an inbound or outbound rule"
            },
            "allowedvalues": [
                "Inbound",
                "Outbound"
            ]
        },
        "access": {
            "type": "string",
            "metadata": {
                "displayName": "Prevent Allow or Deny rule",
                "description": "This specifies if you're looking for this port as part of an allow or deny rule"
            },
            "allowedvalues": [
                "Allow",
                "Deny"
            ]
        }
    },
    "policyRule": {
        "if": {
            "anyOf": [
                {
                    "allOf": [
                        {
                            "field": "type",
                            "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                        },
                        {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                            "equals": "[parameters('access')]"
                        },
                        {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                            "equals": "[parameters('direction')]"
                        },
                        {
                            "anyOf": [
                                {
                                    "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '*'), bool('true'), and(greaterOrEquals(parameters('notAllowedDestinationPort'), int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-')))), lessOrEquals(parameters('notAllowedDestinationPort'), int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange'), '-'))))))))]",
                                    "equals": true
                                },
                                {
                                    "count": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]",
                                        "where": {
                                            "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(parameters('notAllowedDestinationPort'), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(parameters('notAllowedDestinationPort'), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'))), 4)), '-'))))))))]",
                                            "equals": true
                                        }
                                    },
                                    "greater": 0
                                }
                            ]
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "field": "type",
                            "equals": "Microsoft.Network/networkSecurityGroups/securityRules"
                        },
                        {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/access",
                            "equals": "[parameters('access')]"
                        },
                        {
                            "field": "Microsoft.Network/networkSecurityGroups/securityRules/direction",
                            "equals": "[parameters('direction')]"
                        },
                        {
                            "anyOf": [
                                {
                                    "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange')), bool('false'), if(contains(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange'), '*'), bool('true'), and(greaterOrEquals(int(parameters('notAllowedSourcePort')), int(first(split(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange'), '-')))), lessOrEquals(int(parameters('notAllowedSourcePort')), int(last(split(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRange'), '-'))))))))]",
                                    "equals": true
                                },
                                {
                                    "count": {
                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]",
                                        "where": {
                                            "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(parameters('notAllowedSourcePort')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]'))), 4)), '-')))), lessOrEquals(int(parameters('notAllowedSourcePort')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules/sourcePortRanges[*]'))), 4)), '-'))))))))]",
                                            "equals": true
                                        }
                                    },
                                    "greater": 0
                                }
                            ]
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "field": "type",
                            "equals": "Microsoft.Network/networkSecurityGroups"
                        },
                        {
                            "count": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                                "where": {
                                    "allOf": [
                                        {
                                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access",
                                            "equals": "[parameters('access')]"
                                        },
                                        {
                                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].direction",
                                            "equals": "[parameters('direction')]"
                                        },
                                        {
                                            "anyOf": [
                                                {
                                                    "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), '*'), bool('true'), and(greaterOrEquals(parameters('notAllowedDestinationPort'), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'))), 4)), '-')))), lessOrEquals(parameters('notAllowedDestinationPort'), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRange'))), 4)), '-'))))))))]",
                                                    "equals": true
                                                },
                                                {
                                                    "count": {
                                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]",
                                                        "where": {
                                                            "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(parameters('notAllowedDestinationPort'), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-')))), lessOrEquals(parameters('notAllowedDestinationPort'), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].destinationPortRanges[*]'))), 4)), '-'))))))))]",
                                                            "equals": true
                                                        }
                                                    },
                                                    "greater": 0
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "greater": 0
                        }
                    ]
                },
                {
                    "allOf": [
                        {
                            "field": "type",
                            "equals": "Microsoft.Network/networkSecurityGroups"
                        },
                        {
                            "count": {
                                "field": "Microsoft.Network/networkSecurityGroups/securityRules[*]",
                                "where": {
                                    "allOf": [
                                        {
                                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].access",
                                            "equals": "[parameters('access')]"
                                        },
                                        {
                                            "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].direction",
                                            "equals": "[parameters('direction')]"
                                        },
                                        {
                                            "anyOf": [
                                                {
                                                    "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), '*'), bool('true'), and(greaterOrEquals(int(parameters('notAllowedSourcePort')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange'))), 4)), '-')))), lessOrEquals(int(parameters('notAllowedSourcePort')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRange'))), 4)), '-'))))))))]",
                                                    "equals": true
                                                },
                                                {
                                                    "count": {
                                                        "field": "Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]",
                                                        "where": {
                                                            "value": "[if(equals(parameters('notAllowedSourcePort'), 0), bool('false'), if(empty(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), bool('false'), if(contains(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), '*'), bool('true'), and(greaterOrEquals(int(parameters('notAllowedSourcePort')), int(first(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-')))), lessOrEquals(int(parameters('notAllowedSourcePort')), int(last(split(substring(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]')), 2, sub(length(string(field('Microsoft.Network/networkSecurityGroups/securityRules[*].sourcePortRanges[*]'))), 4)), '-'))))))))]",
                                                            "equals": true
                                                        }
                                                    },
                                                    "greater": 0
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "greater": 0
                        }
                    ]
                }
            ]
        },
        "then": {
            "effect": "deny"
        }
    }
}